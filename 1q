#!/bin/zsh
#!/usr/bin/env zsh
# 
# Script for communicating with the ATOS system
# Author Leon Bonde Larsen <leon@bondelarsen.dk>
#
# To-do:
# _ATOS_PATH is currently hardcoaded
#

set -o errexit
set -o nounset

print_error ()
{
	>&2 echo $1
	exit 0
}

exit_SIGINT () 
{
	print_error 'Exiting due to SIGINT'
}
trap exit_SIGINT SIGINT

usage() 
{
	print_error "
	usage: ${0##*/} [OPTIONS] unit|all [COMMAND] 

	Communicate with the ATOS system (Artificial Tutoring Of Songbirds)

	OPTIONS
	-d       Dry run. Echoes commands instead of running them.

	COMMANDS
	ssh      Connect via ssh
	net      Setup internet gateway
	start    Start unit
	stop     Stop unit
	nop      Do nothing
	"
}

send_ssh()
# Execute command-line on remote machine via ssh
{
	#if [ $( $_DRYRUN ) ]; then
	#	echo ssh -t -t ${_REMOTE_USER}@${_REMOTE_HOST}.local "$@"
	#else
		ssh -t -t ${_REMOTE_USER}@${_REMOTE_HOST}.local "$@"
	#fi
}

send_tmux()
# Execute command-line on remote machine in tmux startup-session 
{
	send_ssh "tmux send-keys -t startup:0.0 $@" 
}

setup_environment()
# Set environment variables based on _UNIT variable
{
	if [[ -e $_ATOS_PATH${_UNIT}/_env ]]; then
		source ${_ATOS_PATH}${_UNIT}/_env 
	else
		print_error 'Unit not found'
	fi
}

execute_command()
# Execute command script
{
	if [ -e ${_ATOS_PATH}bin/_${_COMMAND} ]; then

	#	if [ $( $_DRYRUN ) ]; then
	#		cat ${_ATOS_PATH}bin/_${_COMMAND}
	#	else
			source ${_ATOS_PATH}bin/_${_COMMAND}
	#	fi
	else
		print_error 'Unknown command!'
		usage
	fi
}

setup_and_execute()
# Setup environment and execute command
{
	PATH=${_ATOS_PATH}${_UNIT}


	case $_COMMAND in
		'ssh')
			echo "Running $_COMMAND on $_UNIT..."
			setup_environment 
			execute_command
			;;
		*)
			{
				echo "Running $_COMMAND on $_UNIT..."
				setup_environment 
				execute_command
			} 1> >(logger -s -t atos.$_UNIT) 2>&1
	esac
}

# Set default options
_DRYRUN=false

# Parse options
while getopts "d" opt; do
	case "$opt" in
		d)  echo 'Dry run mode!';_DRYRUN=true      ;;
	esac
done
shift $(( OPTIND - 1 )); OPTIND=1

# Set variables
_ATOS_PATH='/home/leon/scripts/atos/'
_COMMAND=$2
_UNIT=$1


if [ $_UNIT = 'all' ]; then
	#avahi-browse -lart | avahi-list | cut -d'.' -f1 |
	#while read _UNIT; do
	#	setup_and_execute
	#done
	#wait
	units="$(avahi-browse -lart | avahi-list | cut -d'.' -f1)" 
	for unit in $=units; do
		_UNIT=$unit
		setup_and_execute
	done
else
	setup_and_execute
fi



